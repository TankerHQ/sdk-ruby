before_script:
  - poetry install

stages:
  - check
  - deploy

.build-from-sources:
  stage: check
  rules:
    - if: $CI_COMMIT_TAG == null && $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true
    - if: $CI_MERGE_REQUEST_ID == null && $CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "master" || $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/)

.build-deployed:
  stage: check
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: manual
      allow_failure: true

lint:
  stage: check
  tags: [linux]
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  script:
    - export PATH=$HOME/.rbenv/versions/2.7.1/bin:$PATH
    - poetry run python run-ci.py lint

check/linux/2.6:
  extends: .build-from-sources
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.6.6/bin:$PATH
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release-shared

check/linux/2.7:
  extends: .build-from-sources
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.7.1/bin:$PATH
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release-shared

check/linux/deployed/2.6:
  extends: .build-deployed
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.6.6/bin:$PATH
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --profile gcc8-release-shared
  artifacts:
    paths:
      - vendor/libctanker/

check/linux/deployed/2.7:
  extends: .build-deployed
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.7.1/bin:$PATH
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --profile gcc8-release-shared

check/macos:
  variables:
    RBENV_VERSION: 2.7.1
  extends: .build-from-sources
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile macos-release-shared

check/macos/deployed:
  variables:
    RBENV_VERSION: 2.7.1
  extends: .build-deployed
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=deployed --profile macos-release-shared
  artifacts:
    paths:
      - vendor/libctanker/

check/linux/downstream/2.6:
  stage: check
  tags:
    - linux
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script:
    - export PATH=$HOME/.rbenv/versions/2.6.6/bin:$PATH
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream --profile gcc8-release-shared

check/linux/downstream/2.7:
  stage: check
  tags:
    - linux
  rules:
    - if: $CI_PIPELINE_SOURCE == "pipeline"
  script:
    - export PATH=$HOME/.rbenv/versions/2.7.1/bin:$PATH
    - poetry run python run-ci.py reset-branch $UPSTREAM_BRANCH_NAME
    - poetry run python run-ci.py download-artifacts --project-id=$UPSTREAM_PROJECT_ID --pipeline-id=$UPSTREAM_PIPELINE_ID --job-name=$UPSTREAM_JOB_NAME
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=upstream --profile gcc8-release-shared

nightly/linux:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.6.6/bin:$PATH
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile gcc8-release-shared

nightly/macos:
  variables:
    RBENV_VERSION: 2.7.1
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
  tags: [macos]
  script:
    - poetry run python run-ci.py --isolate-conan-user-home build-and-test --use-tanker=same-as-branch --profile macos-release-shared

deploy:
  stage: deploy
  rules:
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_TAG
      when: manual
  tags: [linux]
  script:
    - export PATH=$HOME/.rbenv/versions/2.6.6/bin:$PATH
    - poetry run python run-ci.py deploy

mirror:
  tags:
    - linux
  stage: deploy
  rules:
    # mirror public tags, releases branches
    # feature branches, and master
    - if: $CI_PIPELINE_SOURCE != "push"
      when: never
    - if: $CI_COMMIT_REF_NAME =~ /\Av[0-9.]+\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Arelease\/.*\z/
    - if: $CI_COMMIT_REF_NAME =~ /\Afeat\/.+\z/
    - if: $CI_COMMIT_REF_NAME == "master"
  script:
    - poetry run python run-ci.py mirror
